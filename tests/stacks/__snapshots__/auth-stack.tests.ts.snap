// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`auth-stack should generate expected cloud formation template 1`] = `
Object {
  "Outputs": Object {
    "TomeApiGatewayEndpointDAC61333": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "TomeApiGateway3238DF2A",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "TomeApiGatewayDeploymentStageprod0732493A",
            },
            "/",
          ],
        ],
      },
    },
    "UserPoolIdOutput": Object {
      "Description": "UserPool ID",
      "Value": Object {
        "Ref": "TomeUserPool39BBD8AA",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375ArtifactHash3E7B8986": Object {
      "Description": "Artifact hash for asset \\"47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375\\"",
      "Type": "String",
    },
    "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3Bucket7B23A12D": Object {
      "Description": "S3 bucket for asset \\"47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375\\"",
      "Type": "String",
    },
    "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3VersionKey53A7D00E": Object {
      "Description": "S3 key for asset version \\"47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CognitoDefaultAuthenticatedRoleC5D5C31E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "TomeIdentityPool",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitoDefaultAuthenticatedRoleDefaultPolicy4C5EB799": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CognitoDefaultAuthenticatedRoleDefaultPolicy4C5EB799",
        "Roles": Array [
          Object {
            "Ref": "CognitoDefaultAuthenticatedRoleC5D5C31E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CognitoDefaultUnauthenticatedRoleABBF7267": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "TomeIdentityPool",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitoDefaultUnauthenticatedRoleDefaultPolicy2B700C08": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CognitoDefaultUnauthenticatedRoleDefaultPolicy2B700C08",
        "Roles": Array [
          Object {
            "Ref": "CognitoDefaultUnauthenticatedRoleABBF7267",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultValid": Object {
      "Properties": Object {
        "IdentityPoolId": Object {
          "Ref": "TomeIdentityPool",
        },
        "Roles": Object {
          "authenticated": Object {
            "Fn::GetAtt": Array [
              "CognitoDefaultAuthenticatedRoleC5D5C31E",
              "Arn",
            ],
          },
          "unauthenticated": Object {
            "Fn::GetAtt": Array [
              "CognitoDefaultUnauthenticatedRoleABBF7267",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "TomeApiGateway3238DF2A": Object {
      "Properties": Object {
        "Name": "Tome Rest API Gateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "TomeApiGatewayAccountFD9D0648": Object {
      "DependsOn": Array [
        "TomeApiGateway3238DF2A",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "TomeApiGatewayCloudWatchRole44EBC02F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "TomeApiGatewayCloudWatchRole44EBC02F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TomeApiGatewayDeploymentA3E78AE5637a4d39b8715d7798a9101e0fad406d": Object {
      "DependsOn": Array [
        "TomeApiGatewayHELLOGET0981CC78",
        "TomeApiGatewayHELLO2D1CF1CD",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "TomeApiGateway3238DF2A",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "TomeApiGatewayDeploymentStageprod0732493A": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "TomeApiGatewayDeploymentA3E78AE5637a4d39b8715d7798a9101e0fad406d",
        },
        "RestApiId": Object {
          "Ref": "TomeApiGateway3238DF2A",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "TomeApiGatewayHELLO2D1CF1CD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "TomeApiGateway3238DF2A",
            "RootResourceId",
          ],
        },
        "PathPart": "HELLO",
        "RestApiId": Object {
          "Ref": "TomeApiGateway3238DF2A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TomeApiGatewayHELLOGET0981CC78": Object {
      "Properties": Object {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": Object {
          "Ref": "cfnAuth",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "helloWorldFunction00C940B5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "TomeApiGatewayHELLO2D1CF1CD",
        },
        "RestApiId": Object {
          "Ref": "TomeApiGateway3238DF2A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TomeApiGatewayHELLOGETApiPermissionTestAuthStackTomeApiGatewayE1FEF752GETHELLOA5E43475": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "helloWorldFunction00C940B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "TomeApiGateway3238DF2A",
              },
              "/",
              Object {
                "Ref": "TomeApiGatewayDeploymentStageprod0732493A",
              },
              "/GET/HELLO",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TomeApiGatewayHELLOGETApiPermissionTestTestAuthStackTomeApiGatewayE1FEF752GETHELLO78AF6BFF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "helloWorldFunction00C940B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "TomeApiGateway3238DF2A",
              },
              "/test-invoke-stage/GET/HELLO",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TomeIdentityPool": Object {
      "Properties": Object {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": Array [
          Object {
            "ClientId": Object {
              "Ref": "TomeUserPoolClient73667605",
            },
            "ProviderName": Object {
              "Fn::GetAtt": Array [
                "TomeUserPool39BBD8AA",
                "ProviderName",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "TomeUserPool39BBD8AA": Object {
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "AutoVerifiedAttributes": Array [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "LambdaConfig": Object {
          "PostAuthentication": Object {
            "Fn::GetAtt": Array [
              "postAuthTriggerB1E2CEE1",
              "Arn",
            ],
          },
          "PreAuthentication": Object {
            "Fn::GetAtt": Array [
              "preAuthTrigger993ACD21",
              "Arn",
            ],
          },
        },
        "Policies": Object {
          "PasswordPolicy": Object {
            "MinimumLength": 8,
            "RequireLowercase": false,
            "RequireNumbers": false,
            "RequireSymbols": false,
            "RequireUppercase": false,
          },
        },
        "SmsConfiguration": Object {
          "ExternalId": "TestAuthStackTomeUserPool1B88D190",
          "SnsCallerArn": Object {
            "Fn::GetAtt": Array [
              "TomeUserPoolsmsRoleC1B9FF88",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UsernameAttributes": Array [
          "email",
        ],
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
    },
    "TomeUserPoolClient73667605": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "ClientName": "Tome User Pool Client",
        "ExplicitAuthFlows": Array [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "PreventUserExistenceErrors": "ENABLED",
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "TomeUserPool39BBD8AA",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "TomeUserPoolsmsRoleC1B9FF88": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "StringEquals": Object {
                  "sts:ExternalId": "TestAuthStackTomeUserPool1B88D190",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cognito-idp.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "sns-publish",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "cfnAuth": Object {
      "Properties": Object {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "HelloWorldAPIAuthorizer",
        "ProviderARNs": Array [
          Object {
            "Fn::GetAtt": Array [
              "TomeUserPool39BBD8AA",
              "Arn",
            ],
          },
        ],
        "RestApiId": Object {
          "Ref": "TomeApiGateway3238DF2A",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "helloWorldFunction00C940B5": Object {
      "DependsOn": Array [
        "helloWorldFunctionServiceRole8475DBF0",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3Bucket7B23A12D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3VersionKey53A7D00E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3VersionKey53A7D00E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "helloworld.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "helloWorldFunctionServiceRole8475DBF0",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "helloWorldFunctionServiceRole8475DBF0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "postAuthTriggerB1E2CEE1": Object {
      "DependsOn": Array [
        "postAuthTriggerServiceRoleF86355CB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3Bucket7B23A12D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3VersionKey53A7D00E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3VersionKey53A7D00E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "postAuthTrigger.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "postAuthTriggerServiceRoleF86355CB",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "postAuthTriggerPostAuthenticationCognito5540FB79": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "postAuthTriggerB1E2CEE1",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "postAuthTriggerServiceRoleF86355CB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "preAuthTrigger993ACD21": Object {
      "DependsOn": Array [
        "preAuthTriggerServiceRoleAC6EFF16",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3Bucket7B23A12D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3VersionKey53A7D00E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters47adb2d5dd4b96d4a8e643974c01323c8447169eec545d852980f319d641f375S3VersionKey53A7D00E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "preAuthTrigger.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "preAuthTriggerServiceRoleAC6EFF16",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "preAuthTriggerPreAuthenticationCognitoB3CA1373": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "preAuthTrigger993ACD21",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "preAuthTriggerServiceRoleAC6EFF16": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
